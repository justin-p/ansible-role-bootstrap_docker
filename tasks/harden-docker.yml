---
- name: Ensure iptables-persistent is installed.
  ansible.builtin.apt:
    name: iptables-persistent 

- name: Ensure audit daemon is installed.
  ansible.builtin.apt:
    name: auditd
  notify: auditd restart

- name: Enable service auditd and ensure it is not masked.
  systemd:
    name: auditd
    enabled: yes
    masked: no

- name: Ensure auditing is configured for Docker daemon, files and directories.
  ansible.builtin.lineinfile:
    state: present
    create: yes
    dest: "/etc/audit/rules.d/docker.rules"
    line: "{{ item }}"
  notify: load audit rules
  with_items:
   - "-w /usr/bin/docker -k docker"
   - "-w /var/lib/docker -k docker"
   - "-w /etc/docker -k docker"
   - "-w /lib/systemd/system/docker.service -k docker"
   - "-w /lib/systemd/system/docker.socket -k docker"
   - "-w /etc/default/docker -k docker"
   - "-w /etc/docker/daemon.json -k docker"
   - "-w /usr/bin/docker-containerd -k docker"
   - "-w /usr/bin/docker-runc -k docker"
   - "-w /run/containerd -k docker"   
   - "-w /etc/containerd/config.toml -k docker"
   - "-w /usr/bin/containerd-shim -k docker"
   - "-w /usr/bin/containerd-shim-runc-v1 -k docker"
   - "-w /usr/bin/containerd-shim-runc-v2 -k docker"   

- name: Ensure Docker Daemon file is uploaded.
  ansible.builtin.template:
    src: "{{ bsd_docker_deamon_template }}"
    dest: "/etc/docker/daemon.json"
    owner: root
    group: root
    mode: '0644'
  notify: docker restart

- name: Remove /etc/iptables/rules.v6
  ansible.builtin.file:
    path: /etc/iptables/rules.v6
    state: absent

- name: Copy iptables docker nat rules
  ansible.builtin.template:
    src: "{{ bsd_docker_iptables_template }}"
    dest: /etc/iptables/rules.v4
    owner: root
    group: root
    mode: '0644'
  notify: netfilter persistent restart

- name: Add UFW route to allow docker0 to go out on {{ bsd_docker_interface_out }}
  community.general.ufw:
    rule: allow
    route: yes
    interface_in: docker0
    interface_out: "{{ bsd_docker_interface_out }}"
    dest: any
  notify: reload ufw

- name: Flush handlers.
  meta: flush_handlers

- name: Ensure socat is installed
  ansible.builtin.apt:
    name: socat

- name: Copy dockerremapsocket service template to host.
  ansible.builtin.template:
    src: "{{ bsd_docker_remap_socket_template }}"
    dest: /etc/systemd/system/dockerremapsocket.service
    owner: root
    group: root
    mode: '0644'

- name: Enable dockerremapsocket.
  ansible.builtin.service:
    name: dockerremapsocket
    enabled: yes
  become: yes

- name: Flush handlers.
  meta: flush_handlers

- name: Ensure docker is running.
  ansible.builtin.service:
    name: docker
    state: started

- name: Ensure dockerremapsocket is running.
  ansible.builtin.service:
    name: dockerremapsocket
    state: started